<?php

namespace App\Http\Controllers;

use App\Models\{{modelName}};
use App\Http\Requests\{{requestName}};
use Illuminate\Http\Request;
use Illuminate\Http\JsonResponse;

class {{controllerName}} extends Controller
{
    /**
     * Display a listing of the resource.
     */
    public function index(): JsonResponse
    {
        $items = {{modelName}}::paginate(10);

        return response()->json([
            'success' => true,
            'data' => $items,
            'message' => '{{modelName}} list retrieved successfully.'
        ]);
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store({{storeRequestName}} $request): JsonResponse
    {
        try {
            $item = {{modelName}}::create($request->validated());

            return response()->json([
                'success' => true,
                'data' => $item,
                'message' => '{{modelName}} created successfully.'
            ], 201);
        } catch (\Exception $e) {
            return response()->json([
                'success' => false,
                'message' => 'Error creating {{modelName}}: ' . $e->getMessage()
            ], 500);
        }
    }

    /**
     * Display the specified resource.
     */
    public function show({{modelName}} $id): JsonResponse
    {
        return response()->json([
            'success' => true,
            'data' => $id,
            'message' => '{{modelName}} retrieved successfully.'
        ]);
    }

    /**
     * Update the specified resource in storage.
     */
    public function update({{updateRequestName}} $request, {{modelName}} $id): JsonResponse
    {
        try {
            $id->update($request->validated());

            return response()->json([
                'success' => true,
                'data' => $id,
                'message' => '{{modelName}} updated successfully.'
            ]);
        } catch (\Exception $e) {
            return response()->json([
                'success' => false,
                'message' => 'Error updating {{modelName}}: ' . $e->getMessage()
            ], 500);
        }
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy({{modelName}} $id): JsonResponse
    {
        try {
            $id->delete();

            return response()->json([
                'success' => true,
                'message' => '{{modelName}} deleted successfully.'
            ]);
        } catch (\Exception $e) {
            return response()->json([
                'success' => false,
                'message' => 'Error deleting {{modelName}}: ' . $e->getMessage()
            ], 500);
        }
    }
}